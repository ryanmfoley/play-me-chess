function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row;this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Ga of squares)Ga.addEventListener("dragstart",handleDragStart,!1),Ga.addEventListener("dragenter",handleDragEnter,!1),Ga.addEventListener("dragover",handleDragOver,!1),Ga.addEventListener("dragleave",handleDragLeave,!1),Ga.addEventListener("drop",handleDrop,!1),Ga.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),i=i.piece,e="pawn"===i.name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col);return r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){let o;o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null;var t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r;return r=1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,{validMove:r,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece;a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e});t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);s.row=e.row,s.col=e.col;e=this.pieces.indexOf(e);return this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece};t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Rg of squares)Rg.addEventListener("dragstart",handleDragStart,!1),Rg.addEventListener("dragenter",handleDragEnter,!1),Rg.addEventListener("dragover",handleDragOver,!1),Rg.addEventListener("dragleave",handleDragLeave,!1),Rg.addEventListener("drop",handleDrop,!1),Rg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const zm of squares)zm.addEventListener("dragstart",handleDragStart,!1),zm.addEventListener("dragenter",handleDragEnter,!1),zm.addEventListener("dragover",handleDragOver,!1),zm.addEventListener("dragleave",handleDragLeave,!1),zm.addEventListener("drop",handleDrop,!1),zm.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const js of squares)js.addEventListener("dragstart",handleDragStart,!1),js.addEventListener("dragenter",handleDragEnter,!1),js.addEventListener("dragover",handleDragOver,!1),js.addEventListener("dragleave",handleDragLeave,!1),js.addEventListener("drop",handleDrop,!1),js.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Sx of squares)Sx.addEventListener("dragstart",handleDragStart,!1),Sx.addEventListener("dragenter",handleDragEnter,!1),Sx.addEventListener("dragover",handleDragOver,!1),Sx.addEventListener("dragleave",handleDragLeave,!1),Sx.addEventListener("drop",handleDrop,!1),Sx.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const zD of squares)zD.addEventListener("dragstart",handleDragStart,!1),zD.addEventListener("dragenter",handleDragEnter,!1),zD.addEventListener("dragover",handleDragOver,!1),zD.addEventListener("dragleave",handleDragLeave,!1),zD.addEventListener("drop",handleDrop,!1),zD.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const gJ of squares)gJ.addEventListener("dragstart",handleDragStart,!1),gJ.addEventListener("dragenter",handleDragEnter,!1),gJ.addEventListener("dragover",handleDragOver,!1),gJ.addEventListener("dragleave",handleDragLeave,!1),gJ.addEventListener("drop",handleDrop,!1),gJ.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const PO of squares)PO.addEventListener("dragstart",handleDragStart,!1),PO.addEventListener("dragenter",handleDragEnter,!1),PO.addEventListener("dragover",handleDragOver,!1),PO.addEventListener("dragleave",handleDragLeave,!1),PO.addEventListener("drop",handleDrop,!1),PO.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const wU of squares)wU.addEventListener("dragstart",handleDragStart,!1),wU.addEventListener("dragenter",handleDragEnter,!1),wU.addEventListener("dragover",handleDragOver,!1),wU.addEventListener("dragleave",handleDragLeave,!1),wU.addEventListener("drop",handleDrop,!1),wU.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const d$ of squares)d$.addEventListener("dragstart",handleDragStart,!1),d$.addEventListener("dragenter",handleDragEnter,!1),d$.addEventListener("dragover",handleDragOver,!1),d$.addEventListener("dragleave",handleDragLeave,!1),d$.addEventListener("drop",handleDrop,!1),d$.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const M3 of squares)M3.addEventListener("dragstart",handleDragStart,!1),M3.addEventListener("dragenter",handleDragEnter,!1),M3.addEventListener("dragover",handleDragOver,!1),M3.addEventListener("dragleave",handleDragLeave,!1),M3.addEventListener("drop",handleDrop,!1),M3.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const t9 of squares)t9.addEventListener("dragstart",handleDragStart,!1),t9.addEventListener("dragenter",handleDragEnter,!1),t9.addEventListener("dragover",handleDragOver,!1),t9.addEventListener("dragleave",handleDragLeave,!1),t9.addEventListener("drop",handleDrop,!1),t9.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const afa of squares)afa.addEventListener("dragstart",handleDragStart,!1),afa.addEventListener("dragenter",handleDragEnter,!1),afa.addEventListener("dragover",handleDragOver,!1),afa.addEventListener("dragleave",handleDragLeave,!1),afa.addEventListener("drop",handleDrop,!1),afa.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Jka of squares)Jka.addEventListener("dragstart",handleDragStart,!1),Jka.addEventListener("dragenter",handleDragEnter,!1),Jka.addEventListener("dragover",handleDragOver,!1),Jka.addEventListener("dragleave",handleDragLeave,!1),Jka.addEventListener("drop",handleDrop,!1),Jka.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const qqa of squares)qqa.addEventListener("dragstart",handleDragStart,!1),qqa.addEventListener("dragenter",handleDragEnter,!1),qqa.addEventListener("dragover",handleDragOver,!1),qqa.addEventListener("dragleave",handleDragLeave,!1),qqa.addEventListener("drop",handleDrop,!1),qqa.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Zva of squares)Zva.addEventListener("dragstart",handleDragStart,!1),Zva.addEventListener("dragenter",handleDragEnter,!1),Zva.addEventListener("dragover",handleDragOver,!1),Zva.addEventListener("dragleave",handleDragLeave,!1),Zva.addEventListener("drop",handleDrop,!1),Zva.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const GBa of squares)GBa.addEventListener("dragstart",handleDragStart,!1),GBa.addEventListener("dragenter",handleDragEnter,!1),GBa.addEventListener("dragover",handleDragOver,!1),GBa.addEventListener("dragleave",handleDragLeave,!1),GBa.addEventListener("drop",handleDrop,!1),GBa.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const nHa of squares)nHa.addEventListener("dragstart",handleDragStart,!1),nHa.addEventListener("dragenter",handleDragEnter,!1),nHa.addEventListener("dragover",handleDragOver,!1),nHa.addEventListener("dragleave",handleDragLeave,!1),nHa.addEventListener("drop",handleDrop,!1),nHa.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const WMa of squares)WMa.addEventListener("dragstart",handleDragStart,!1),WMa.addEventListener("dragenter",handleDragEnter,!1),WMa.addEventListener("dragover",handleDragOver,!1),WMa.addEventListener("dragleave",handleDragLeave,!1),WMa.addEventListener("drop",handleDrop,!1),WMa.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const DSa of squares)DSa.addEventListener("dragstart",handleDragStart,!1),DSa.addEventListener("dragenter",handleDragEnter,!1),DSa.addEventListener("dragover",handleDragOver,!1),DSa.addEventListener("dragleave",handleDragLeave,!1),DSa.addEventListener("drop",handleDrop,!1),DSa.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const kYa of squares)kYa.addEventListener("dragstart",handleDragStart,!1),kYa.addEventListener("dragenter",handleDragEnter,!1),kYa.addEventListener("dragover",handleDragOver,!1),kYa.addEventListener("dragleave",handleDragLeave,!1),kYa.addEventListener("drop",handleDrop,!1),kYa.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const T1a of squares)T1a.addEventListener("dragstart",handleDragStart,!1),T1a.addEventListener("dragenter",handleDragEnter,!1),T1a.addEventListener("dragover",handleDragOver,!1),T1a.addEventListener("dragleave",handleDragLeave,!1),T1a.addEventListener("drop",handleDrop,!1),T1a.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const A7a of squares)A7a.addEventListener("dragstart",handleDragStart,!1),A7a.addEventListener("dragenter",handleDragEnter,!1),A7a.addEventListener("dragover",handleDragOver,!1),A7a.addEventListener("dragleave",handleDragLeave,!1),A7a.addEventListener("drop",handleDrop,!1),A7a.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const hdb of squares)hdb.addEventListener("dragstart",handleDragStart,!1),hdb.addEventListener("dragenter",handleDragEnter,!1),hdb.addEventListener("dragover",handleDragOver,!1),hdb.addEventListener("dragleave",handleDragLeave,!1),hdb.addEventListener("drop",handleDrop,!1),hdb.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Qib of squares)Qib.addEventListener("dragstart",handleDragStart,!1),Qib.addEventListener("dragenter",handleDragEnter,!1),Qib.addEventListener("dragover",handleDragOver,!1),Qib.addEventListener("dragleave",handleDragLeave,!1),Qib.addEventListener("drop",handleDrop,!1),Qib.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const xob of squares)xob.addEventListener("dragstart",handleDragStart,!1),xob.addEventListener("dragenter",handleDragEnter,!1),xob.addEventListener("dragover",handleDragOver,!1),xob.addEventListener("dragleave",handleDragLeave,!1),xob.addEventListener("drop",handleDrop,!1),xob.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const eub of squares)eub.addEventListener("dragstart",handleDragStart,!1),eub.addEventListener("dragenter",handleDragEnter,!1),eub.addEventListener("dragover",handleDragOver,!1),eub.addEventListener("dragleave",handleDragLeave,!1),eub.addEventListener("drop",handleDrop,!1),eub.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Nzb of squares)Nzb.addEventListener("dragstart",handleDragStart,!1),Nzb.addEventListener("dragenter",handleDragEnter,!1),Nzb.addEventListener("dragover",handleDragOver,!1),Nzb.addEventListener("dragleave",handleDragLeave,!1),Nzb.addEventListener("drop",handleDrop,!1),Nzb.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const uFb of squares)uFb.addEventListener("dragstart",handleDragStart,!1),uFb.addEventListener("dragenter",handleDragEnter,!1),uFb.addEventListener("dragover",handleDragOver,!1),uFb.addEventListener("dragleave",handleDragLeave,!1),uFb.addEventListener("drop",handleDrop,!1),uFb.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const bLb of squares)bLb.addEventListener("dragstart",handleDragStart,!1),bLb.addEventListener("dragenter",handleDragEnter,!1),bLb.addEventListener("dragover",handleDragOver,!1),bLb.addEventListener("dragleave",handleDragLeave,!1),bLb.addEventListener("drop",handleDrop,!1),bLb.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const KQb of squares)KQb.addEventListener("dragstart",handleDragStart,!1),KQb.addEventListener("dragenter",handleDragEnter,!1),KQb.addEventListener("dragover",handleDragOver,!1),KQb.addEventListener("dragleave",handleDragLeave,!1),KQb.addEventListener("drop",handleDrop,!1),KQb.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const rWb of squares)rWb.addEventListener("dragstart",handleDragStart,!1),rWb.addEventListener("dragenter",handleDragEnter,!1),rWb.addEventListener("dragover",handleDragOver,!1),rWb.addEventListener("dragleave",handleDragLeave,!1),rWb.addEventListener("drop",handleDrop,!1),rWb.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const $_b of squares)$_b.addEventListener("dragstart",handleDragStart,!1),$_b.addEventListener("dragenter",handleDragEnter,!1),$_b.addEventListener("dragover",handleDragOver,!1),$_b.addEventListener("dragleave",handleDragLeave,!1),$_b.addEventListener("drop",handleDrop,!1),$_b.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const H5b of squares)H5b.addEventListener("dragstart",handleDragStart,!1),H5b.addEventListener("dragenter",handleDragEnter,!1),H5b.addEventListener("dragover",handleDragOver,!1),H5b.addEventListener("dragleave",handleDragLeave,!1),H5b.addEventListener("drop",handleDrop,!1),H5b.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const obc of squares)obc.addEventListener("dragstart",handleDragStart,!1),obc.addEventListener("dragenter",handleDragEnter,!1),obc.addEventListener("dragover",handleDragOver,!1),obc.addEventListener("dragleave",handleDragLeave,!1),obc.addEventListener("drop",handleDrop,!1),obc.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Xgc of squares)Xgc.addEventListener("dragstart",handleDragStart,!1),Xgc.addEventListener("dragenter",handleDragEnter,!1),Xgc.addEventListener("dragover",handleDragOver,!1),Xgc.addEventListener("dragleave",handleDragLeave,!1),Xgc.addEventListener("drop",handleDrop,!1),Xgc.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Emc of squares)Emc.addEventListener("dragstart",handleDragStart,!1),Emc.addEventListener("dragenter",handleDragEnter,!1),Emc.addEventListener("dragover",handleDragOver,!1),Emc.addEventListener("dragleave",handleDragLeave,!1),Emc.addEventListener("drop",handleDrop,!1),Emc.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const lsc of squares)lsc.addEventListener("dragstart",handleDragStart,!1),lsc.addEventListener("dragenter",handleDragEnter,!1),lsc.addEventListener("dragover",handleDragOver,!1),lsc.addEventListener("dragleave",handleDragLeave,!1),lsc.addEventListener("drop",handleDrop,!1),lsc.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Uxc of squares)Uxc.addEventListener("dragstart",handleDragStart,!1),Uxc.addEventListener("dragenter",handleDragEnter,!1),Uxc.addEventListener("dragover",handleDragOver,!1),Uxc.addEventListener("dragleave",handleDragLeave,!1),Uxc.addEventListener("drop",handleDrop,!1),Uxc.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const BDc of squares)BDc.addEventListener("dragstart",handleDragStart,!1),BDc.addEventListener("dragenter",handleDragEnter,!1),BDc.addEventListener("dragover",handleDragOver,!1),BDc.addEventListener("dragleave",handleDragLeave,!1),BDc.addEventListener("drop",handleDrop,!1),BDc.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const iJc of squares)iJc.addEventListener("dragstart",handleDragStart,!1),iJc.addEventListener("dragenter",handleDragEnter,!1),iJc.addEventListener("dragover",handleDragOver,!1),iJc.addEventListener("dragleave",handleDragLeave,!1),iJc.addEventListener("drop",handleDrop,!1),iJc.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const ROc of squares)ROc.addEventListener("dragstart",handleDragStart,!1),ROc.addEventListener("dragenter",handleDragEnter,!1),ROc.addEventListener("dragover",handleDragOver,!1),ROc.addEventListener("dragleave",handleDragLeave,!1),ROc.addEventListener("drop",handleDrop,!1),ROc.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const yUc of squares)yUc.addEventListener("dragstart",handleDragStart,!1),yUc.addEventListener("dragenter",handleDragEnter,!1),yUc.addEventListener("dragover",handleDragOver,!1),yUc.addEventListener("dragleave",handleDragLeave,!1),yUc.addEventListener("drop",handleDrop,!1),yUc.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const f$c of squares)f$c.addEventListener("dragstart",handleDragStart,!1),f$c.addEventListener("dragenter",handleDragEnter,!1),f$c.addEventListener("dragover",handleDragOver,!1),f$c.addEventListener("dragleave",handleDragLeave,!1),f$c.addEventListener("drop",handleDrop,!1),f$c.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const O3c of squares)O3c.addEventListener("dragstart",handleDragStart,!1),O3c.addEventListener("dragenter",handleDragEnter,!1),O3c.addEventListener("dragover",handleDragOver,!1),O3c.addEventListener("dragleave",handleDragLeave,!1),O3c.addEventListener("drop",handleDrop,!1),O3c.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const v9c of squares)v9c.addEventListener("dragstart",handleDragStart,!1),v9c.addEventListener("dragenter",handleDragEnter,!1),v9c.addEventListener("dragover",handleDragOver,!1),v9c.addEventListener("dragleave",handleDragLeave,!1),v9c.addEventListener("drop",handleDrop,!1),v9c.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const cfd of squares)cfd.addEventListener("dragstart",handleDragStart,!1),cfd.addEventListener("dragenter",handleDragEnter,!1),cfd.addEventListener("dragover",handleDragOver,!1),cfd.addEventListener("dragleave",handleDragLeave,!1),cfd.addEventListener("drop",handleDrop,!1),cfd.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Lkd of squares)Lkd.addEventListener("dragstart",handleDragStart,!1),Lkd.addEventListener("dragenter",handleDragEnter,!1),Lkd.addEventListener("dragover",handleDragOver,!1),Lkd.addEventListener("dragleave",handleDragLeave,!1),Lkd.addEventListener("drop",handleDrop,!1),Lkd.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const sqd of squares)sqd.addEventListener("dragstart",handleDragStart,!1),sqd.addEventListener("dragenter",handleDragEnter,!1),sqd.addEventListener("dragover",handleDragOver,!1),sqd.addEventListener("dragleave",handleDragLeave,!1),sqd.addEventListener("drop",handleDrop,!1),sqd.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const _vd of squares)_vd.addEventListener("dragstart",handleDragStart,!1),_vd.addEventListener("dragenter",handleDragEnter,!1),_vd.addEventListener("dragover",handleDragOver,!1),_vd.addEventListener("dragleave",handleDragLeave,!1),_vd.addEventListener("drop",handleDrop,!1),_vd.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const IBd of squares)IBd.addEventListener("dragstart",handleDragStart,!1),IBd.addEventListener("dragenter",handleDragEnter,!1),IBd.addEventListener("dragover",handleDragOver,!1),IBd.addEventListener("dragleave",handleDragLeave,!1),IBd.addEventListener("drop",handleDrop,!1),IBd.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const pHd of squares)pHd.addEventListener("dragstart",handleDragStart,!1),pHd.addEventListener("dragenter",handleDragEnter,!1),pHd.addEventListener("dragover",handleDragOver,!1),pHd.addEventListener("dragleave",handleDragLeave,!1),pHd.addEventListener("drop",handleDrop,!1),pHd.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const YMd of squares)YMd.addEventListener("dragstart",handleDragStart,!1),YMd.addEventListener("dragenter",handleDragEnter,!1),YMd.addEventListener("dragover",handleDragOver,!1),YMd.addEventListener("dragleave",handleDragLeave,!1),YMd.addEventListener("drop",handleDrop,!1),YMd.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const FSd of squares)FSd.addEventListener("dragstart",handleDragStart,!1),FSd.addEventListener("dragenter",handleDragEnter,!1),FSd.addEventListener("dragover",handleDragOver,!1),FSd.addEventListener("dragleave",handleDragLeave,!1),FSd.addEventListener("drop",handleDrop,!1),FSd.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const mYd of squares)mYd.addEventListener("dragstart",handleDragStart,!1),mYd.addEventListener("dragenter",handleDragEnter,!1),mYd.addEventListener("dragover",handleDragOver,!1),mYd.addEventListener("dragleave",handleDragLeave,!1),mYd.addEventListener("drop",handleDrop,!1),mYd.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const V1d of squares)V1d.addEventListener("dragstart",handleDragStart,!1),V1d.addEventListener("dragenter",handleDragEnter,!1),V1d.addEventListener("dragover",handleDragOver,!1),V1d.addEventListener("dragleave",handleDragLeave,!1),V1d.addEventListener("drop",handleDrop,!1),V1d.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const C7d of squares)C7d.addEventListener("dragstart",handleDragStart,!1),C7d.addEventListener("dragenter",handleDragEnter,!1),C7d.addEventListener("dragover",handleDragOver,!1),C7d.addEventListener("dragleave",handleDragLeave,!1),C7d.addEventListener("drop",handleDrop,!1),C7d.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const jde of squares)jde.addEventListener("dragstart",handleDragStart,!1),jde.addEventListener("dragenter",handleDragEnter,!1),jde.addEventListener("dragover",handleDragOver,!1),jde.addEventListener("dragleave",handleDragLeave,!1),jde.addEventListener("drop",handleDrop,!1),jde.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Sie of squares)Sie.addEventListener("dragstart",handleDragStart,!1),Sie.addEventListener("dragenter",handleDragEnter,!1),Sie.addEventListener("dragover",handleDragOver,!1),Sie.addEventListener("dragleave",handleDragLeave,!1),Sie.addEventListener("drop",handleDrop,!1),Sie.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const zoe of squares)zoe.addEventListener("dragstart",handleDragStart,!1),zoe.addEventListener("dragenter",handleDragEnter,!1),zoe.addEventListener("dragover",handleDragOver,!1),zoe.addEventListener("dragleave",handleDragLeave,!1),zoe.addEventListener("drop",handleDrop,!1),zoe.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const gue of squares)gue.addEventListener("dragstart",handleDragStart,!1),gue.addEventListener("dragenter",handleDragEnter,!1),gue.addEventListener("dragover",handleDragOver,!1),gue.addEventListener("dragleave",handleDragLeave,!1),gue.addEventListener("drop",handleDrop,!1),gue.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Pze of squares)Pze.addEventListener("dragstart",handleDragStart,!1),Pze.addEventListener("dragenter",handleDragEnter,!1),Pze.addEventListener("dragover",handleDragOver,!1),Pze.addEventListener("dragleave",handleDragLeave,!1),Pze.addEventListener("drop",handleDrop,!1),Pze.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const wFe of squares)wFe.addEventListener("dragstart",handleDragStart,!1),wFe.addEventListener("dragenter",handleDragEnter,!1),wFe.addEventListener("dragover",handleDragOver,!1),wFe.addEventListener("dragleave",handleDragLeave,!1),wFe.addEventListener("drop",handleDrop,!1),wFe.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const dLe of squares)dLe.addEventListener("dragstart",handleDragStart,!1),dLe.addEventListener("dragenter",handleDragEnter,!1),dLe.addEventListener("dragover",handleDragOver,!1),dLe.addEventListener("dragleave",handleDragLeave,!1),dLe.addEventListener("drop",handleDrop,!1),dLe.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const MQe of squares)MQe.addEventListener("dragstart",handleDragStart,!1),MQe.addEventListener("dragenter",handleDragEnter,!1),MQe.addEventListener("dragover",handleDragOver,!1),MQe.addEventListener("dragleave",handleDragLeave,!1),MQe.addEventListener("drop",handleDrop,!1),MQe.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(d),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const tWe of squares)tWe.addEventListener("dragstart",handleDragStart,!1),tWe.addEventListener("dragenter",handleDragEnter,!1),tWe.addEventListener("dragover",handleDragOver,!1),tWe.addEventListener("dragleave",handleDragLeave,!1),tWe.addEventListener("drop",handleDrop,!1),tWe.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(console.log(),this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const a0e of squares)a0e.addEventListener("dragstart",handleDragStart,!1),a0e.addEventListener("dragenter",handleDragEnter,!1),a0e.addEventListener("dragover",handleDragOver,!1),a0e.addEventListener("dragleave",handleDragLeave,!1),a0e.addEventListener("drop",handleDrop,!1),a0e.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const J5e of squares)J5e.addEventListener("dragstart",handleDragStart,!1),J5e.addEventListener("dragenter",handleDragEnter,!1),J5e.addEventListener("dragover",handleDragOver,!1),J5e.addEventListener("dragleave",handleDragLeave,!1),J5e.addEventListener("drop",handleDrop,!1),J5e.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const qbf of squares)qbf.addEventListener("dragstart",handleDragStart,!1),qbf.addEventListener("dragenter",handleDragEnter,!1),qbf.addEventListener("dragover",handleDragOver,!1),qbf.addEventListener("dragleave",handleDragLeave,!1),qbf.addEventListener("drop",handleDrop,!1),qbf.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Zgf of squares)Zgf.addEventListener("dragstart",handleDragStart,!1),Zgf.addEventListener("dragenter",handleDragEnter,!1),Zgf.addEventListener("dragover",handleDragOver,!1),Zgf.addEventListener("dragleave",handleDragLeave,!1),Zgf.addEventListener("drop",handleDrop,!1),Zgf.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat(),{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Gmf of squares)Gmf.addEventListener("dragstart",handleDragStart,!1),Gmf.addEventListener("dragenter",handleDragEnter,!1),Gmf.addEventListener("dragover",handleDragOver,!1),Gmf.addEventListener("dragleave",handleDragLeave,!1),Gmf.addEventListener("drop",handleDrop,!1),Gmf.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const nsf of squares)nsf.addEventListener("dragstart",handleDragStart,!1),nsf.addEventListener("dragenter",handleDragEnter,!1),nsf.addEventListener("dragover",handleDragOver,!1),nsf.addEventListener("dragleave",handleDragLeave,!1),nsf.addEventListener("drop",handleDrop,!1),nsf.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Wxf of squares)Wxf.addEventListener("dragstart",handleDragStart,!1),Wxf.addEventListener("dragenter",handleDragEnter,!1),Wxf.addEventListener("dragover",handleDragOver,!1),Wxf.addEventListener("dragleave",handleDragLeave,!1),Wxf.addEventListener("drop",handleDrop,!1),Wxf.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const DDf of squares)DDf.addEventListener("dragstart",handleDragStart,!1),DDf.addEventListener("dragenter",handleDragEnter,!1),DDf.addEventListener("dragover",handleDragOver,!1),DDf.addEventListener("dragleave",handleDragLeave,!1),DDf.addEventListener("drop",handleDrop,!1),DDf.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const kJf of squares)kJf.addEventListener("dragstart",handleDragStart,!1),kJf.addEventListener("dragenter",handleDragEnter,!1),kJf.addEventListener("dragover",handleDragOver,!1),kJf.addEventListener("dragleave",handleDragLeave,!1),kJf.addEventListener("drop",handleDrop,!1),kJf.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const TOf of squares)TOf.addEventListener("dragstart",handleDragStart,!1),TOf.addEventListener("dragenter",handleDragEnter,!1),TOf.addEventListener("dragover",handleDragOver,!1),TOf.addEventListener("dragleave",handleDragLeave,!1),TOf.addEventListener("drop",handleDrop,!1),TOf.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const AUf of squares)AUf.addEventListener("dragstart",handleDragStart,!1),AUf.addEventListener("dragenter",handleDragEnter,!1),AUf.addEventListener("dragover",handleDragOver,!1),AUf.addEventListener("dragleave",handleDragLeave,!1),AUf.addEventListener("drop",handleDrop,!1),AUf.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const h$f of squares)h$f.addEventListener("dragstart",handleDragStart,!1),h$f.addEventListener("dragenter",handleDragEnter,!1),h$f.addEventListener("dragover",handleDragOver,!1),h$f.addEventListener("dragleave",handleDragLeave,!1),h$f.addEventListener("drop",handleDrop,!1),h$f.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Q3f of squares)Q3f.addEventListener("dragstart",handleDragStart,!1),Q3f.addEventListener("dragenter",handleDragEnter,!1),Q3f.addEventListener("dragover",handleDragOver,!1),Q3f.addEventListener("dragleave",handleDragLeave,!1),Q3f.addEventListener("drop",handleDrop,!1),Q3f.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const x9f of squares)x9f.addEventListener("dragstart",handleDragStart,!1),x9f.addEventListener("dragenter",handleDragEnter,!1),x9f.addEventListener("dragover",handleDragOver,!1),x9f.addEventListener("dragleave",handleDragLeave,!1),x9f.addEventListener("drop",handleDrop,!1),x9f.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const efg of squares)efg.addEventListener("dragstart",handleDragStart,!1),efg.addEventListener("dragenter",handleDragEnter,!1),efg.addEventListener("dragover",handleDragOver,!1),efg.addEventListener("dragleave",handleDragLeave,!1),efg.addEventListener("drop",handleDrop,!1),efg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Nkg of squares)Nkg.addEventListener("dragstart",handleDragStart,!1),Nkg.addEventListener("dragenter",handleDragEnter,!1),Nkg.addEventListener("dragover",handleDragOver,!1),Nkg.addEventListener("dragleave",handleDragLeave,!1),Nkg.addEventListener("drop",handleDrop,!1),Nkg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const uqg of squares)uqg.addEventListener("dragstart",handleDragStart,!1),uqg.addEventListener("dragenter",handleDragEnter,!1),uqg.addEventListener("dragover",handleDragOver,!1),uqg.addEventListener("dragleave",handleDragLeave,!1),uqg.addEventListener("drop",handleDrop,!1),uqg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const bwg of squares)bwg.addEventListener("dragstart",handleDragStart,!1),bwg.addEventListener("dragenter",handleDragEnter,!1),bwg.addEventListener("dragover",handleDragOver,!1),bwg.addEventListener("dragleave",handleDragLeave,!1),bwg.addEventListener("drop",handleDrop,!1),bwg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,r),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const KBg of squares)KBg.addEventListener("dragstart",handleDragStart,!1),KBg.addEventListener("dragenter",handleDragEnter,!1),KBg.addEventListener("dragover",handleDragOver,!1),KBg.addEventListener("dragleave",handleDragLeave,!1),KBg.addEventListener("drop",handleDrop,!1),KBg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board,s,inA),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const rHg of squares)rHg.addEventListener("dragstart",handleDragStart,!1),rHg.addEventListener("dragenter",handleDragEnter,!1),rHg.addEventListener("dragover",handleDragOver,!1),rHg.addEventListener("dragleave",handleDragLeave,!1),rHg.addEventListener("drop",handleDrop,!1),rHg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const $Mg of squares)$Mg.addEventListener("dragstart",handleDragStart,!1),$Mg.addEventListener("dragenter",handleDragEnter,!1),$Mg.addEventListener("dragover",handleDragOver,!1),$Mg.addEventListener("dragleave",handleDragLeave,!1),$Mg.addEventListener("drop",handleDrop,!1),$Mg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const HSg of squares)HSg.addEventListener("dragstart",handleDragStart,!1),HSg.addEventListener("dragenter",handleDragEnter,!1),HSg.addEventListener("dragover",handleDragOver,!1),HSg.addEventListener("dragleave",handleDragLeave,!1),HSg.addEventListener("drop",handleDrop,!1),HSg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const oYg of squares)oYg.addEventListener("dragstart",handleDragStart,!1),oYg.addEventListener("dragenter",handleDragEnter,!1),oYg.addEventListener("dragover",handleDragOver,!1),oYg.addEventListener("dragleave",handleDragLeave,!1),oYg.addEventListener("drop",handleDrop,!1),oYg.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const X1g of squares)X1g.addEventListener("dragstart",handleDragStart,!1),X1g.addEventListener("dragenter",handleDragEnter,!1),X1g.addEventListener("dragover",handleDragOver,!1),X1g.addEventListener("dragleave",handleDragLeave,!1),X1g.addEventListener("drop",handleDrop,!1),X1g.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const E7g of squares)E7g.addEventListener("dragstart",handleDragStart,!1),E7g.addEventListener("dragenter",handleDragEnter,!1),E7g.addEventListener("dragover",handleDragOver,!1),E7g.addEventListener("dragleave",handleDragLeave,!1),E7g.addEventListener("drop",handleDrop,!1),E7g.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const ldh of squares)ldh.addEventListener("dragstart",handleDragStart,!1),ldh.addEventListener("dragenter",handleDragEnter,!1),ldh.addEventListener("dragover",handleDragOver,!1),ldh.addEventListener("dragleave",handleDragLeave,!1),ldh.addEventListener("drop",handleDrop,!1),ldh.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log("checkmate",chessBoard.board),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Uih of squares)Uih.addEventListener("dragstart",handleDragStart,!1),Uih.addEventListener("dragenter",handleDragEnter,!1),Uih.addEventListener("dragover",handleDragOver,!1),Uih.addEventListener("dragleave",handleDragLeave,!1),Uih.addEventListener("drop",handleDrop,!1),Uih.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log(chessBoard.board,"checkmate"),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Boh of squares)Boh.addEventListener("dragstart",handleDragStart,!1),Boh.addEventListener("dragenter",handleDragEnter,!1),Boh.addEventListener("dragover",handleDragOver,!1),Boh.addEventListener("dragleave",handleDragLeave,!1),Boh.addEventListener("drop",handleDrop,!1),Boh.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log(chessBoard.board,"checkmate"),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const iuh of squares)iuh.addEventListener("dragstart",handleDragStart,!1),iuh.addEventListener("dragenter",handleDragEnter,!1),iuh.addEventListener("dragover",handleDragOver,!1),iuh.addEventListener("dragleave",handleDragLeave,!1),iuh.addEventListener("drop",handleDrop,!1),iuh.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(console.log(chessBoard.board),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Rzh of squares)Rzh.addEventListener("dragstart",handleDragStart,!1),Rzh.addEventListener("dragenter",handleDragEnter,!1),Rzh.addEventListener("dragover",handleDragOver,!1),Rzh.addEventListener("dragleave",handleDragLeave,!1),Rzh.addEventListener("drop",handleDrop,!1),Rzh.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?setTimeout(function(){},2e3):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const yFh of squares)yFh.addEventListener("dragstart",handleDragStart,!1),yFh.addEventListener("dragenter",handleDragEnter,!1),yFh.addEventListener("dragover",handleDragOver,!1),yFh.addEventListener("dragleave",handleDragLeave,!1),yFh.addEventListener("drop",handleDrop,!1),yFh.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?setTimeout(function(){},2e3):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const fLh of squares)fLh.addEventListener("dragstart",handleDragStart,!1),fLh.addEventListener("dragenter",handleDragEnter,!1),fLh.addEventListener("dragover",handleDragOver,!1),fLh.addEventListener("dragleave",handleDragLeave,!1),fLh.addEventListener("drop",handleDrop,!1),fLh.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?setTimeout(function(){},2e3):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const OQh of squares)OQh.addEventListener("dragstart",handleDragStart,!1),OQh.addEventListener("dragenter",handleDragEnter,!1),OQh.addEventListener("dragover",handleDragOver,!1),OQh.addEventListener("dragleave",handleDragLeave,!1),OQh.addEventListener("drop",handleDrop,!1),OQh.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?setTimeout(function(){},2e3):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const vWh of squares)vWh.addEventListener("dragstart",handleDragStart,!1),vWh.addEventListener("dragenter",handleDragEnter,!1),vWh.addEventListener("dragover",handleDragOver,!1),vWh.addEventListener("dragleave",handleDragLeave,!1),vWh.addEventListener("drop",handleDrop,!1),vWh.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?setTimeout(function(){},2e3):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const c0h of squares)c0h.addEventListener("dragstart",handleDragStart,!1),c0h.addEventListener("dragenter",handleDragEnter,!1),c0h.addEventListener("dragover",handleDragOver,!1),c0h.addEventListener("dragleave",handleDragLeave,!1),c0h.addEventListener("drop",handleDrop,!1),c0h.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(gameResult.innerHTML="Checkmate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const L5h of squares)L5h.addEventListener("dragstart",handleDragStart,!1),L5h.addEventListener("dragenter",handleDragEnter,!1),L5h.addEventListener("dragover",handleDragOver,!1),L5h.addEventListener("dragleave",handleDragLeave,!1),L5h.addEventListener("drop",handleDrop,!1),L5h.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(gameResult.innerHTML="Checkmate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const sbi of squares)sbi.addEventListener("dragstart",handleDragStart,!1),sbi.addEventListener("dragenter",handleDragEnter,!1),sbi.addEventListener("dragover",handleDragOver,!1),sbi.addEventListener("dragleave",handleDragLeave,!1),sbi.addEventListener("drop",handleDrop,!1),sbi.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(gameResult.innerHTML="Checkmate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const _gi of squares)_gi.addEventListener("dragstart",handleDragStart,!1),_gi.addEventListener("dragenter",handleDragEnter,!1),_gi.addEventListener("dragover",handleDragOver,!1),_gi.addEventListener("dragleave",handleDragLeave,!1),_gi.addEventListener("drop",handleDrop,!1),_gi.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(gameResult.innerHTML="Checkmate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){const{turn:o}=chessBoard;if(player.color===o){selectedCell=chessBoard.identifyCell(e.target);const t=chessBoard.selectSquare(selectedCell);t.color===o&&(selectedPiece=t.piece,setTimeout(()=>e.target.style.display="none",0))}}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");const{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);const{validMove:s,castle:r}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=s,selectedPiece=legalMove?(r.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=r.rooksStartingSquare,landingCell=r.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const Imi of squares)Imi.addEventListener("dragstart",handleDragStart,!1),Imi.addEventListener("dragenter",handleDragEnter,!1),Imi.addEventListener("dragover",handleDragOver,!1),Imi.addEventListener("dragleave",handleDragLeave,!1),Imi.addEventListener("drop",handleDrop,!1),Imi.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(gameResult.innerHTML="Checkmate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{const s=document.createTextNode(e),r=document.createElement("button");if(r.innerText="Play Me",r.className="join-game-btn w-75 btn btn-dark",r.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const i=document.querySelectorAll("tbody > tr"),[c,a]=i[t].cells;c.innerHTML="<td></td>",c.appendChild(s),a.innerHTML="<td></td>",a.appendChild(r),a.classList.add("text-center")}else{const l=lobbyTable.insertRow(),h=l.insertCell(),n=l.insertCell();h.innerHTML="<td></td>",h.appendChild(s),n.innerHTML="<td></td>",n.appendChild(r),n.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);function Cell(e,o){this.row=e,this.col=o,this.color="",this.piece="",this.cellBox=document.querySelectorAll(`.rows-${e}`)[o]}class Board{constructor(){this.board=new Array(8);for(let e=0;e<8;e++)this.board[e]=new Array(8);for(let o=0;o<8;o++)for(let e=0;e<8;e++)this.board[o][e]=new Cell(o,e);this.turn="white",this.boardPosition=[],this.draw=!1,this.staleMate=!1}assignPieceToSquare(e){this.board[e.row][e.col].color=e.color,this.board[e.row][e.col].piece=e}checkDraw(){const e=this.board.map(e=>e.filter(e=>e.piece)).flat();this.draw=!0;let o=0,t=0,s=0,r=0,i=0,c=0,a=0;e.forEach(({piece:e})=>{switch(e.name){case"pawn":o++;break;case"knight":"white"===e.color?t++:s++;break;case"bishop":"white"===e.color?r++:i++;break;case"rook":c++;break;case"queen":a++}}),!this.checkThreefoldRepetition()&&(o||c||a||2===r||2===i||t&&r||s&&i)&&(this.draw=!1)}checkThreefoldRepetition(){const t=JSON.stringify(this.board.map(e=>e.map(e=>{var{piece:{name:o,color:t,row:s,col:r,enPassant:i,moved:e}}=e;return{name:o,color:t,row:s,col:r,enPassant:i,moved:e}})))+this.turn;if(this.boardPosition.push(t),3===this.boardPosition.reduce((e,o)=>e+(o===t),0))return!0}clearBoard(){this.board.forEach(e=>e.forEach(e=>e.cellBox.innerHTML=""))}copyBoard({board:e}){this.board=[...e].map(e=>[...e].map(e=>({...e})))}displayPieces(){this.board.forEach(e=>e.forEach(e=>{if(e.cellBox.innerHTML="",e.piece){const s=document.createElement("img");var{color:o,piece:{name:t}}=e;s.src=`./images/${o}-${t}.svg`,s.className="white"===o?"piece":"piece black-piece",s.draggable=!0,e.cellBox.append(s)}}))}identifyCell(e){const o=("board"===e.parentElement.id?e:e.parentElement).classList;var[t]=o[0].match(/\d+/),[e]=o[1].match(/\d+/);return{row:t,col:e}}markEnemySquares(e,o){e.pieces.forEach(e=>e.clearTargetSquares()),o.pieces.forEach(e=>e.clearTargetSquares()),e.pieces.forEach(e=>e.markEnemySquares(this.board)),o.pieces.forEach(e=>e.markEnemySquares(this.board)),this.whiteSquares="white"===e.color?e.pieces.map(e=>e.targets):o.pieces.map(e=>e.targets),this.blackSquares="white"===e.color?o.pieces.map(e=>e.targets):e.pieces.map(e=>e.targets)}markEnPassantPawns(e){var o="white"===e.color?e.col-1:e.col+1,t="white"===e.color?e.col+1:e.col-1;this.board[e.row][o]&&this.board[e.row][o].piece&&this.board[e.row][o].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][o].piece.enPassant=!0),this.board[e.row][t]&&this.board[e.row][t].piece&&this.board[e.row][t].piece.color!==e.color&&(e.enPassant=!0,this.board[e.row][t].piece.enPassant=!0)}movePiece(e,o,t,s){const r=e.color===this.turn?o:e,i=e.color===this.turn?e:o;e=t.row,this.removePieceFromSquare(t),s.piece?this.removePieceFromGame(r,s.piece):!t.enPassant||(o=("white"===t.color?this.board[s.row+1]:this.board[s.row-1])[s.col].piece)&&(this.removePieceFromSquare(o),this.removePieceFromGame(i,o)),t.changePosition(s),this.assignPieceToSquare(t),this.markEnemySquares(r,i),"king"!==t.name&&"rook"!==t.name||(t.moved=!0),r.pieces.forEach(e=>e.enPassant=!1),i.pieces.forEach(e=>e.enPassant=!1),"pawn"===t.name&&2===Math.abs(e-s.row)&&this.markEnPassantPawns(t)}removePieceFromGame({pieces:e},o){e=e.filter(e=>e.row!==o.row||e.col!==o.col)}removePieceFromSquare({row:e,col:o}){this.board[e][o].color="",this.board[e][o].piece=""}selectSquare({row:e,col:o}){return this.board[e][o]}}const chessBoard=new Board;import{chessBoard}from"./board.js";import{placePiecesOnBoard}from"./pieces.js";import{whitePlayer,blackPlayer}from"./players.js";const audio=document.querySelector("audio"),board=document.querySelector("#board"),squares=document.querySelectorAll(".square"),leaveGameButton=document.querySelector("#leave-game-btn"),logOutForm=document.getElementById("logout-form"),logOutButton=document.getElementById("logout-btn"),gameInfoModal=document.querySelector("#game-info-modal"),gameInfo=document.querySelector(".game-info"),gameResult=document.querySelector(".game-result"),socket=io();let legalMove=!0,selectedCell,selectedPiece,landingCell,landingSquare,player,opponent;function handleDragStart(e){var o,{turn:t}=chessBoard;player.color===t&&(selectedCell=chessBoard.identifyCell(e.target),(o=chessBoard.selectSquare(selectedCell)).color===t&&(selectedPiece=o.piece,setTimeout(()=>e.target.style.display="none",0)))}function handleDrop(e){e.preventDefault(),this.classList.remove("hover-border");var{turn:o}=chessBoard,t=e.target;landingCell=chessBoard.identifyCell(t),landingSquare=chessBoard.selectSquare(landingCell);var{validMove:e,castle:t}=selectedPiece.checkMove(player,opponent,chessBoard,landingSquare);legalMove=e,selectedPiece=legalMove?(t.validCastle&&(socket.emit("movePiece",{selectedCell:selectedCell,landingCell:landingCell}),selectedCell=t.rooksStartingSquare,landingCell=t.rooksLandingSquare),socket.emit("movePiece",{turn:o,selectedCell:selectedCell,landingCell:landingCell}),!1):(legalMove=!0,null)}function handleDragEnter(e){e.preventDefault(),this.classList.add("hover-border")}function handleDragLeave(){this.classList.remove("hover-border")}function handleDragEnd(e){setTimeout(()=>e.target.style.display="block",0)}function handleDragOver(e){e.preventDefault()}socket.emit("enterGameRoom"),socket.on("enterGameRoom",({id:e,color:o})=>{player="white"===o?whitePlayer:blackPlayer,opponent="white"===o?blackPlayer:whitePlayer,player.id=e,"white"===o?(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Waiting for opponent..."):(board.classList.add("black-piece"),gameInfo.classList.add("black-piece"),gameResult.classList.add("black-piece"))}),socket.on("startGame",()=>{gameInfoModal.style.visibility="hidden",gameInfo.style.display="none",chessBoard.clearBoard(),placePiecesOnBoard(chessBoard),chessBoard.displayPieces(),chessBoard.markEnemySquares(player,opponent)});for(const nsi of squares)nsi.addEventListener("dragstart",handleDragStart,!1),nsi.addEventListener("dragenter",handleDragEnter,!1),nsi.addEventListener("dragover",handleDragOver,!1),nsi.addEventListener("dragleave",handleDragLeave,!1),nsi.addEventListener("drop",handleDrop,!1),nsi.addEventListener("dragend",handleDragEnd,!1);socket.on("movePiece",async({turn:o,selectedCell:t,landingCell:e})=>{chessBoard.turn=o;const s=player.color===chessBoard.turn?opponent:player,r=player.color===chessBoard.turn?player:opponent;var i=chessBoard.selectSquare(t),t=chessBoard.selectSquare(e),e="pawn"===(i=i.piece).name&&("white"===o?7:0)==e.row;if(chessBoard.movePiece(player,opponent,i,t,socket),chessBoard.displayPieces(),e){let e;player.color!==o?(e=await player.selectPieceModal(),socket.emit("promotePawn",e)):e=await opponent.getPromotedPiece(socket);var c=s.promotePawn(i,e);chessBoard.movePiece(s,r,c,t),chessBoard.displayPieces()}chessBoard.markEnemySquares(player,opponent),chessBoard.checkDraw(),r.isKingInCheck(chessBoard),r.checkEscapeMoves(chessBoard,s),r.inCheck?({row:c,col:t}=r.kingSquare,chessBoard.board[c][t].cellBox.id="check-square",audio.play()):chessBoard.board.forEach(e=>e.forEach(e=>e.cellBox.removeAttribute("id"))),r.checkMate?(gameResult.innerHTML="Checkmate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.draw?(gameResult.innerHTML="Draw",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},500),setTimeout(function(){window.location.href="/lobby"},2e3)):chessBoard.staleMate&&(gameResult.innerHTML="Stalemate",setTimeout(function(){gameInfoModal.style.visibility="visible",gameResult.style.display="block"},2e3),setTimeout(function(){window.location.href="/lobby"},2e3))}),socket.on("leaveGame",e=>{e&&player.id!==e&&(gameInfoModal.style.visibility="visible",gameInfo.style.display="block",gameInfo.innerHTML="Opponent left game",socket.emit("updatePlayersWaiting",player.id),setTimeout(()=>{window.location.href="/lobby"},1e3))}),leaveGameButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("updatePlayersWaiting",player.id),window.location.href="/lobby"}),logOutButton.addEventListener("click",()=>{socket.emit("leaveGame",player.id),socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()}),window.addEventListener("beforeunload",()=>{socket.emit("leaveGame",player.id),socket.emit("logout")});const username=window.document.cookie.split("=")[1],createGameBtn=document.querySelector("#create-game-btn"),logOutBtn=document.querySelector("#logout-btn"),logOutForm=document.querySelector("#logout-form"),lobbyTable=document.querySelector("#lobby-table tbody"),socket=io();function generateTable(e){lobbyTable.innerHTML="";for(let e=0;e<5;e++){const o=lobbyTable.insertRow();o.insertCell(),o.insertCell()}e.forEach(({username:e,id:o},t)=>{e=document.createTextNode(e);const s=document.createElement("button");if(s.innerText="Play Me",s.className="join-game-btn w-75 btn btn-dark",s.onclick=()=>{socket.emit("updatePlayersWaiting",o),socket.emit("joinGame",{id:o,color:"black"}),setTimeout(()=>{window.location.href="/chess"},100)},t<5){const[r,i]=document.querySelectorAll("tbody > tr")[t].cells;r.innerHTML="<td></td>",r.appendChild(e),i.innerHTML="<td></td>",i.appendChild(s),i.classList.add("text-center")}else{const c=lobbyTable.insertRow(),a=c.insertCell(),l=c.insertCell();a.innerHTML="<td></td>",a.appendChild(e),l.innerHTML="<td></td>",l.appendChild(s),l.classList.add("text-center")}})}socket.emit("login",username),socket.on("playersWaiting",e=>{generateTable(e)}),createGameBtn.addEventListener("click",()=>{socket.emit("joinGame",{color:"white"}),window.location.href="/chess"}),logOutBtn.addEventListener("click",()=>{socket.emit("logout"),socket.on("logout",({id:e})=>{socket.emit("updatePlayersWaiting",e)}),logOutForm.submit()});class Piece{constructor(e,o,t,s){this.color=e,this.name=o,this.row=t,this.col=s,this.enPassant=!1,this.targets=[]}changePosition({row:e,col:o}){this.row=e,this.col=o}checkMove(e,o,t,s){let{validMove:r,castle:i}=this.checkForValidMove(e,o,t,s),c=Object.assign(Object.create(Object.getPrototypeOf(t)),t);c.copyBoard(t);const a=e.copyPlayer();return e=o.copyPlayer(),o=a.pieces.find(e=>e.row===this.row&&e.col===this.col),r&&c.movePiece(a,e,o,s),c.markEnemySquares(a,e),a.isKingInCheck(c),(a.inCheck||s.piece&&"king"===s.piece.name)&&(r=!1),{validMove:r,castle:i}}clearTargetSquares(){this.targets=[]}}class Pawn extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){var r="white"===this.color?6:1,i="white"===this.color?this.row-1:this.row+1,c="white"===this.color?this.row-2:this.row+2;let a;return this.col===s.col&&!s.piece&&s.row===i||this.col===s.col&&this.row===r&&s.row===c&&!s.piece||1===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&s.piece&&this.color!==s.piece.color?a=!0:this.enPassant?(c=o.pieces.find(e=>e.enPassant),o="white"===this.color?c.row-1:c.row+1,s.row===o&&s.col===c.col&&(a=!0)):a=!1,{validMove:a,castle:{validCastle:!1}}}markEnemySquares(e){var o="white"===this.color?0<this.row?this.row-1:null:this.row<7?this.row+1:null,t=0<this.col?this.col-1:null,s=this.col<7?this.col+1:null;null!==o&&(null!==t&&this.targets.push({row:o,col:t}),null!==s&&this.targets.push({row:o,col:s}))}}class Knight extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){return{validMove:1===Math.abs(this.row-s.row)&&2===Math.abs(this.col-s.col)&&this.color!==s.piece.color||2===Math.abs(this.row-s.row)&&1===Math.abs(this.col-s.col)&&this.color!==s.piece.color,castle:{validCastle:!1}}}markEnemySquares(e){for(let o=this.row-2;o<=this.row+2;o++)for(let e=this.col-2;e<=this.col+2;e++)(2===Math.abs(this.row-o)&&1===Math.abs(this.col-e)||1===Math.abs(this.row-o)&&2===Math.abs(this.col-e))&&0<=o&&o<=7&&0<=e&&e<=7&&this.targets.push({row:o,col:e})}}class Bishop extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){let i;if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}i=!t&&r.piece.color!==this.color}return{validMove:i,castle:{validCastle:!1}}}markEnemySquares(e){let o=this.row-1,t=this.col-1;for(;0<=o&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t--);for(o=this.row-1,t=this.col+1;0<=o&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o--,t++);for(o=this.row+1,t=this.col-1;o<=7&&0<=t&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t--);for(o=this.row+1,t=this.col+1;o<=7&&t<=7&&(this.targets.push({row:o,col:t}),!e[o][t].piece);o++,t++);}}class Rook extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){let r,i;if(s.col<this.col&&s.row===this.row){for(let e=this.col-1;e>s.col;e--)t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.col>this.col&&s.row===this.row){for(let e=this.col+1;e<s.col;e++)t.board[this.row][e]&&t.board[this.row][e].piece&&(i=!0);r=!0}else if(s.row<this.row&&s.col===this.col){for(let e=this.row-1;e>s.row;e--)t.board[e][this.col].piece&&(i=!0);r=!0}else if(s.row>this.row&&s.col===this.col){for(let e=this.row+1;e<s.row;e++)t.board[e][this.col].piece&&(i=!0);r=!0}return r=!(!r||i||s.piece.color===this.color),{validMove:r,castle:{validCastle:!1}}}markEnemySquares(o){for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!o[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!o[e][this.col].piece);e++);}}class Queen extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,s,r){return{validMove:(()=>{if(Math.abs(this.row-r.row)===Math.abs(this.col-r.col)){let t=!1;if(r.row<this.row&&r.col<this.col){let e=this.row-1,o=this.col-1;for(;e>r.row&&o>r.col;e--,o--)s.board[e][o].piece&&(t=!0)}else if(r.row<this.row&&r.col>this.col){let e=this.row-1,o=this.col+1;for(;e>r.row&&o<r.col;e--,o++)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col<this.col){let e=this.row+1,o=this.col-1;for(;e<r.row&&o>r.col;e++,o--)s.board[e][o].piece&&(t=!0)}else if(r.row>this.row&&r.col>this.col){let e=this.row+1,o=this.col+1;for(;e<r.row&&o<r.col;e++,o++)s.board[e][o].piece&&(t=!0)}if(!t&&r.piece.color!==this.color)return!0}return!1})()||(()=>{let e,o;if(r.col<this.col&&r.row===this.row){for(let e=this.col-1;e>r.col;e--)s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.col>this.col&&r.row===this.row){for(let e=this.col+1;e<r.col;e++)s.board[this.row][e]&&s.board[this.row][e].piece&&(o=!0);e=!0}else if(r.row<this.row&&r.col===this.col){for(let e=this.row-1;e>r.row;e--)s.board[e][this.col].piece&&(o=!0);e=!0}else if(r.row>this.row&&r.col===this.col){for(let e=this.row+1;e<r.row;e++)s.board[e][this.col].piece&&(o=!0);e=!0}return!(!e||o||r.piece.color===this.color)})(),castle:{validCastle:!1}}}markEnemySquares(t){(()=>{let e=this.row-1,o=this.col-1;for(;0<=e&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o--);for(e=this.row-1,o=this.col+1;0<=e&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e--,o++);for(e=this.row+1,o=this.col-1;e<=7&&0<=o&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o--);for(e=this.row+1,o=this.col+1;e<=7&&o<=7&&(this.targets.push({row:e,col:o}),!t[e][o].piece);e++,o++);})(),(()=>{for(let e=this.col-1;0<=e&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e--);for(let e=this.col+1;e<=7&&(this.targets.push({row:this.row,col:e}),!t[this.row][e].piece);e++);for(let e=this.row-1;0<=e&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e--);for(let e=this.row+1;e<=7&&(this.targets.push({row:e,col:this.col}),!t[e][this.col].piece);e++);})()}}class King extends Piece{constructor(e,o,t,s){super(e,o,t,s)}checkForValidMove(e,o,t,s){const r="white"===this.color?t.blackSquares:t.whiteSquares;var i=r.find(e=>e===s);let c;"white"===this.color&&this.row===s.row?c=this.col<s.col?"right":"left":"black"===this.color&&this.row===s.row&&(c=this.col<s.col?"left":"right");let a={validCastle:!1},l,h,n,d,w;if("white"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)){l=!0;const u=t.board[this.row].slice(this.col+1,s.col+1);var p=t.board[this.row][7].piece;a.rooksStartingSquare={row:p.row,col:7},a.rooksLandingSquare={row:p.row,col:this.col+1},a.rook=p,w=p.moved,u.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),u.forEach(e=>{e.piece&&(h=!0)})}else if("white"===this.color&&"left"===c&&2===Math.abs(this.col-s.col)||"black"===this.color&&"right"===c&&2===Math.abs(this.col-s.col)){l=!0;const m=t.board[this.row].slice(s.col-1,this.col);t=t.board[this.row][0].piece,a.rooksStartingSquare={row:t.row,col:0},a.rooksLandingSquare={row:t.row,col:this.col-1},a.rook=t,w=t.moved,m.forEach(o=>{r.forEach(e=>{o.row===e.row&&o.col===e.col&&(n=!0)})}),m.forEach(e=>{e.piece&&(h=!0)})}return e.inCheck||this.moved||w||!a.rook||a.rook.row!==a.rooksStartingSquare.row||a.rook.col!==a.rooksStartingSquare.col||!l||h||n||(a.validCastle=!0,d=!0),Math.abs(this.row-s.row)<=1&&Math.abs(this.col-s.col)<=1&&s.color!==this.color&&!i&&(d=!0),{validMove:d,castle:a}}markEnemySquares(e){var t=0<=this.row-1?this.row-1:0,s=this.row+1<=7?this.row+1:7,r=0<=this.col-1?this.col-1:0,i=this.col+1<=7?this.col+1:7;for(let o=t;o<=s;o++)for(let e=r;e<=i;e++)this.row===o&&this.col===e||this.targets.push({row:o,col:e})}}const whitePieces=[],blackPieces=[];for(let o of["white","black"])for(let e=0;e<8;e++)"white"===o?whitePieces.push(new Pawn("white","pawn",6,e)):blackPieces.push(new Pawn("black","pawn",1,e));whitePieces.push(new Knight("white","knight",7,1)),whitePieces.push(new Knight("white","knight",7,6)),whitePieces.push(new Bishop("white","bishop",7,2)),whitePieces.push(new Bishop("white","bishop",7,5)),whitePieces.push(new Rook("white","rook",7,0)),whitePieces.push(new Rook("white","rook",7,7)),whitePieces.push(new Queen("white","queen",7,3)),whitePieces.push(new King("white","king",7,4)),blackPieces.push(new Knight("black","knight",0,1)),blackPieces.push(new Knight("black","knight",0,6)),blackPieces.push(new Bishop("black","bishop",0,2)),blackPieces.push(new Bishop("black","bishop",0,5)),blackPieces.push(new Rook("black","rook",0,0)),blackPieces.push(new Rook("black","rook",0,7)),blackPieces.push(new Queen("black","queen",0,3)),blackPieces.push(new King("black","king",0,4));const placePiecesOnBoard=o=>{whitePieces.forEach(e=>{o.assignPieceToSquare(e)}),blackPieces.forEach(e=>{o.assignPieceToSquare(e)})};import{whitePieces,blackPieces}from"./pieces.js";class Player{constructor(e,o){this.color=e,this.pieces=o,this.inCheck=!1,this.checkMate=!1,this.staleMate=!1}get kingSquare(){return this.pieces.find(e=>"king"===e.name)}copyPlayer(){const e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.pieces=[...this.pieces].map(e=>Object.assign(Object.create(Object.getPrototypeOf(e)),e)),e}checkEscapeMoves(e,s){this.escapeCheck=!1;var o,t,{pieces:r}=this.copyPlayer();const i=["knight","queen"];e:for(const h of r){"pawn"===h.name&&(o="white"===h.color?h.row-1:h.row+1,0<=(t="white"===h.color?h.row-2:h.row+2)&&t<=7&&(h.targets.push({row:o,col:h.col}),h.targets.push({row:t,col:h.col}))),"king"!==h.name||h.moved||(h.targets.push({row:h.row,col:h.col-2}),h.targets.push({row:h.row,col:h.col+2}));for(const n of h.targets){let o=!1,t=Object.assign(Object.create(Object.getPrototypeOf(e)),e);t.copyBoard(e);const d=this.copyPlayer(),w=s.copyPlayer(),p=d.pieces.find(e=>e.row===h.row&&e.col===h.col),u=t.selectSquare(n);var c="white"===this.color?0:7,{validMove:a,castle:l}=p.checkMove(d,w,t,u);if(a&&(a="pawn"===p.name&&c==n.row,l.validCastle?(c=t.selectSquare(l.rooksLandingSquare),t.movePiece(d,w,p,u),t.movePiece(d,w,l.rook,c)):a?i.forEach(e=>{e=d.promotePawn(p,{color:this.color,piece:e}),t.movePiece(d,w,e,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)}):t.movePiece(d,w,p,u),t.markEnemySquares(d,w),d.isKingInCheck(t),d.inCheck||(this.escapeCheck=!0,o=!0)),o)break e}}this.escapeCheck||(this.inCheck?this.checkMate=!0:e.staleMate=!0)}getPromotedPiece(t){return new Promise(o=>{t.on("promotePawn",e=>{t.off("promotePawn"),o(e)})})}isKingInCheck({whiteSquares:e,blackSquares:o}){const t=("white"===this.color?o:e).flat();try{const{row:s,col:r}=this.kingSquare;t.find(e=>s===e.row&&r===e.col)?this.inCheck=!0:this.inCheck=!1}catch(e){console.error(e)}}promotePawn(e,{piece:o}){var t=this.sparePieces.find(e=>e.name===o);const s=Object.assign(Object.create(Object.getPrototypeOf(t)),t);return s.row=e.row,s.col=e.col,e=this.pieces.indexOf(e),this.pieces[e]=s,s}selectPieceModal(){const t=document.querySelector("#promote-modal");t.innerHTML="","black"===this.color&&t.classList.add("promote-modal-black");for(const e of["knight","bishop","rook","queen"]){const o=document.createElement("img");o.src=`./images/${this.color}-${e}.svg`,o.className="white"===this.color?"piece":"piece black-piece",o.setAttribute("data-piece",e),t.append(o)}return setTimeout(function(){t.style.visibility="visible"},300),new Promise(o=>{t.addEventListener("click",e=>{e={color:this.color,piece:e.target.dataset.piece},t.style.visibility="hidden",o(e)})})}}const whitePlayer=new Player("white",whitePieces),blackPlayer=new Player("black",blackPieces);export{Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer,Board,chessBoard,placePiecesOnBoard,whitePieces,blackPieces,whitePlayer,blackPlayer};